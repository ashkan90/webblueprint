var o=(r=>(r.BLUEPRINT="blueprint",r.FUNCTION="function",r.VARIABLE="variable",r.EVENT_DISPATCHER="event-dispatcher",r.MACRO="macro",r.NODE_TYPE="node-type",r.TYPE_DEFINITION="type-definition",r.PLUGIN="plugin",r.PRESET="preset",r))(o||{});class h{constructor(){this.assets=[],this.folders=[],this.syncOptions={autoSync:!0,syncInterval:3e4,conflictResolution:"auto",offlineSupport:!0},this.currentSyncJob=null,this.changeListeners=[],this._initializeMockData()}_initializeMockData(){this.folders=[{id:"f1",name:"Blueprints",path:"/Blueprints",created:new Date("2023-01-01"),modified:new Date("2023-01-01")},{id:"f2",name:"Characters",path:"/Blueprints/Characters",created:new Date("2023-01-02"),modified:new Date("2023-01-02")},{id:"f3",name:"Environment",path:"/Blueprints/Environment",created:new Date("2023-01-03"),modified:new Date("2023-01-03")},{id:"f4",name:"UI",path:"/Blueprints/UI",created:new Date("2023-01-04"),modified:new Date("2023-01-04")},{id:"f5",name:"Weapons",path:"/Blueprints/Weapons",created:new Date("2023-01-05"),modified:new Date("2023-01-05")},{id:"f6",name:"Props",path:"/Blueprints/Environment/Props",created:new Date("2023-01-06"),modified:new Date("2023-01-06")},{id:"f7",name:"Terrain",path:"/Blueprints/Environment/Terrain",created:new Date("2023-01-07"),modified:new Date("2023-01-07")}],this.assets=[{id:"a1",name:"PlayerCharacter",type:o.BLUEPRINT,path:"/Blueprints/Characters/PlayerCharacter",created:new Date("2023-02-01"),modified:new Date("2023-03-15"),metadata:{author:"John",version:"1.0"},content:{nodes:[],connections:[]}},{id:"a2",name:"EnemyBase",type:o.BLUEPRINT,path:"/Blueprints/Characters/EnemyBase",created:new Date("2023-02-05"),modified:new Date("2023-03-10"),metadata:{author:"Sarah",version:"1.2"},content:{nodes:[],connections:[]}},{id:"a3",name:"Tree_01",type:o.BLUEPRINT,path:"/Blueprints/Environment/Props/Tree_01",created:new Date("2023-02-10"),modified:new Date("2023-02-15"),metadata:{author:"Mike",version:"1.0"},content:{nodes:[],connections:[]}},{id:"a4",name:"Rock_01",type:o.BLUEPRINT,path:"/Blueprints/Environment/Props/Rock_01",created:new Date("2023-02-12"),modified:new Date("2023-02-15"),metadata:{author:"Mike",version:"1.0"},content:{nodes:[],connections:[]}},{id:"a5",name:"MainMenu",type:o.BLUEPRINT,path:"/Blueprints/UI/MainMenu",created:new Date("2023-02-20"),modified:new Date("2023-03-25"),metadata:{author:"Lisa",version:"2.1"},content:{nodes:[],connections:[]}},{id:"a6",name:"InventoryPanel",type:o.BLUEPRINT,path:"/Blueprints/UI/InventoryPanel",created:new Date("2023-02-25"),modified:new Date("2023-03-20"),metadata:{author:"Lisa",version:"1.5"},content:{nodes:[],connections:[]}},{id:"a7",name:"Pistol",type:o.BLUEPRINT,path:"/Blueprints/Weapons/Pistol",created:new Date("2023-03-01"),modified:new Date("2023-03-30"),metadata:{author:"John",version:"1.3"},content:{nodes:[],connections:[]}},{id:"a8",name:"Rifle",type:o.BLUEPRINT,path:"/Blueprints/Weapons/Rifle",created:new Date("2023-03-05"),modified:new Date("2023-04-01"),metadata:{author:"John",version:"1.2"},content:{nodes:[],connections:[]}},{id:"a9",name:"TerrainGenerator",type:o.BLUEPRINT,path:"/Blueprints/Environment/Terrain/TerrainGenerator",created:new Date("2023-03-10"),modified:new Date("2023-04-05"),metadata:{author:"Sarah",version:"1.0"},content:{nodes:[],connections:[]}},{id:"a10",name:"WeaponBase",type:o.BLUEPRINT,path:"/Blueprints/Weapons/WeaponBase",created:new Date("2023-03-15"),modified:new Date("2023-03-18"),metadata:{author:"John",version:"1.0"},content:{nodes:[],connections:[]}}]}getSyncOptions(){return{...this.syncOptions}}updateSyncOptions(e){return this.syncOptions={...this.syncOptions,...e},e.autoSync!==void 0&&(e.autoSync?this._startAutoSync():this._stopAutoSync()),this.syncOptions}_startAutoSync(){this.currentSyncJob&&clearInterval(this.currentSyncJob),this.syncOptions.autoSync&&(this.currentSyncJob=setInterval(()=>{this._performSync()},this.syncOptions.syncInterval))}_stopAutoSync(){this.currentSyncJob&&(clearInterval(this.currentSyncJob),this.currentSyncJob=null)}_performSync(){console.log("Performing sync..."),Math.random()>.7&&setTimeout(()=>{this._notifyChangeListeners({type:"asset_updated",id:this.assets[Math.floor(Math.random()*this.assets.length)].id,timestamp:new Date})},500)}async syncNow(){return console.log("Manual sync triggered"),new Promise(e=>{setTimeout(()=>{this._performSync(),e(null)},800)})}addChangeListener(e){return this.changeListeners.push(e),()=>{this.changeListeners=this.changeListeners.filter(s=>s!==e)}}_notifyChangeListeners(e){this.changeListeners.forEach(s=>{try{s(e)}catch(t){console.error("Error in change listener:",t)}})}watchForChanges(){const e=setInterval(()=>{Math.random()>.9&&this._notifyChangeListeners({type:"asset_updated",id:this.assets[Math.floor(Math.random()*this.assets.length)].id,timestamp:new Date})},2e4);return()=>{clearInterval(e)}}getAllAssets(){return[...this.assets]}getAllFolders(){return[...this.folders]}async loadAsset(e){return new Promise((s,t)=>{setTimeout(()=>{const n=this.assets.find(a=>a.id===e);n?s({...n}):t(new Error(`Asset not found: ${e}`))},300)})}async saveAsset(e){return new Promise(s=>{setTimeout(()=>{const t=this.assets.findIndex(n=>n.id===e.id);if(t>=0){const n={...this.assets[t],...e,modified:new Date};this.assets[t]=n,this._notifyChangeListeners({type:"asset_updated",id:e.id,timestamp:new Date}),s({...n})}else{const n={...e,id:e.id||`a${Date.now()}`,created:new Date,modified:new Date};this.assets.push(n),this._notifyChangeListeners({type:"asset_created",id:n.id,timestamp:new Date}),s({...n})}},500)})}async deleteAsset(e){return new Promise((s,t)=>{setTimeout(()=>{const n=this.assets.findIndex(a=>a.id===e);n>=0?(this.assets.splice(n,1),this._notifyChangeListeners({type:"asset_deleted",id:e,timestamp:new Date}),s(null)):t(new Error(`Asset not found: ${e}`))},500)})}async createFolder(e,s){return new Promise((t,n)=>{setTimeout(()=>{const a=e.endsWith("/")?`${e}${s}`:`${e}/${s}`;if(this.folders.some(d=>d.path===a)){n(new Error(`Folder already exists: ${a}`));return}const i={id:`f${Date.now()}`,name:s,path:a,created:new Date,modified:new Date};this.folders.push(i),this._notifyChangeListeners({type:"folder_created",id:i.id,timestamp:new Date}),t({...i})},500)})}async deleteFolder(e){return new Promise((s,t)=>{setTimeout(()=>{const n=this.folders.findIndex(a=>a.path===e);if(n>=0){const a=this.folders[n].id;this.folders.splice(n,1),this.assets=this.assets.filter(i=>!i.path.startsWith(e)),this.folders=this.folders.filter(i=>!i.path.startsWith(e+"/")),this._notifyChangeListeners({type:"folder_deleted",id:a,timestamp:new Date}),s(null)}else t(new Error(`Folder not found: ${e}`))},500)})}async loadFolderContents(e){return new Promise(s=>{setTimeout(()=>{const t=e.endsWith("/")?e:`${e}`,n=this.folders.filter(i=>{if(i.path===t)return!1;const d=i.path.startsWith(t)?i.path.slice(t.length):null;return d?d.split("/").filter(Boolean).length===1:!1}),a=this.assets.filter(i=>{const d=i.path.substring(0,i.path.lastIndexOf("/"));return d===t||d+"/"===t});s({assets:a,folders:n})},300)})}getFoldersAt(e){const s=e.endsWith("/")?e.slice(0,-1):e;return s===""?this.folders.filter(t=>t.path.split("/").filter(Boolean).length===1):this.folders.filter(t=>t.path===s?!1:t.path.substring(0,t.path.lastIndexOf("/"))===s)}async searchAssets({term:e,type:s,path:t}){return new Promise(n=>{setTimeout(()=>{let a=[...this.assets];if(e){const i=e.toLowerCase();a=a.filter(d=>d.name.toLowerCase().includes(i)||d.path.toLowerCase().includes(i))}s&&(a=a.filter(i=>i.type===s)),t&&(a=a.filter(i=>i.path.startsWith(t))),n(a)},300)})}}export{o as A,h as M};
